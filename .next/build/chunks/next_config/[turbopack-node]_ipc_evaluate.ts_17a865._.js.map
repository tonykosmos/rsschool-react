{
  "version": 3,
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["/turbopack/[turbopack-node]/ipc/index.ts"],"sourcesContent":["import { createConnection } from \"node:net\";\nimport type { StackFrame } from \"../compiled/stacktrace-parser\";\nimport { parse as parseStackTrace } from \"../compiled/stacktrace-parser\";\n\nexport type StructuredError = {\n  name: string;\n  message: string;\n  stack: StackFrame[];\n};\n\nexport function structuredError(e: Error): StructuredError {\n  return {\n    name: e.name,\n    message: e.message,\n    stack: parseStackTrace(e.stack!),\n  };\n}\n\ntype State =\n  | {\n      type: \"waiting\";\n    }\n  | {\n      type: \"packet\";\n      length: number;\n    };\n\nexport type Ipc<TIncoming, TOutgoing> = {\n  recv(): Promise<TIncoming>;\n  send(message: TOutgoing): Promise<void>;\n  sendError(error: Error): Promise<never>;\n};\n\nfunction createIpc<TIncoming, TOutgoing>(\n  port: number\n): Ipc<TIncoming, TOutgoing> {\n  const socket = createConnection(port, \"127.0.0.1\");\n  const packetQueue: Buffer[] = [];\n  const recvPromiseResolveQueue: Array<(message: TIncoming) => void> = [];\n\n  function pushPacket(packet: Buffer) {\n    const recvPromiseResolve = recvPromiseResolveQueue.shift();\n    if (recvPromiseResolve != null) {\n      recvPromiseResolve(JSON.parse(packet.toString(\"utf8\")) as TIncoming);\n    } else {\n      packetQueue.push(packet);\n    }\n  }\n\n  let state: State = { type: \"waiting\" };\n  let buffer: Buffer = Buffer.alloc(0);\n  socket.once(\"connect\", () => {\n    socket.on(\"data\", (chunk) => {\n      buffer = Buffer.concat([buffer, chunk]);\n\n      loop: while (true) {\n        switch (state.type) {\n          case \"waiting\": {\n            if (buffer.length >= 4) {\n              const length = buffer.readUInt32BE(0);\n              buffer = buffer.subarray(4);\n              state = { type: \"packet\", length };\n            } else {\n              break loop;\n            }\n            break;\n          }\n          case \"packet\": {\n            if (buffer.length >= state.length) {\n              const packet = buffer.subarray(0, state.length);\n              buffer = buffer.subarray(state.length);\n              state = { type: \"waiting\" };\n              pushPacket(packet);\n            } else {\n              break loop;\n            }\n            break;\n          }\n        }\n      }\n    });\n  });\n  // When the socket is closed, this process is no longer needed.\n  // This might happen e. g. when parent process is killed or\n  // node.js pool is garbage collected.\n  socket.once(\"close\", () => {\n    process.exit(0);\n  });\n\n  function send(message: any): Promise<void> {\n    const packet = Buffer.from(JSON.stringify(message), \"utf8\");\n    const length = Buffer.alloc(4);\n    length.writeUInt32BE(packet.length);\n    socket.write(length);\n\n    return new Promise((resolve, reject) => {\n      socket.write(packet, (err) => {\n        process.stderr.write(`TURBOPACK_OUTPUT_D\\n`);\n        process.stdout.write(`TURBOPACK_OUTPUT_D\\n`);\n        if (err != null) {\n          reject(err);\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  return {\n    async recv() {\n      const packet = packetQueue.shift();\n      if (packet != null) {\n        return JSON.parse(packet.toString(\"utf8\")) as TIncoming;\n      }\n\n      const result = await new Promise<TIncoming>((resolve) => {\n        recvPromiseResolveQueue.push((result) => {\n          resolve(result);\n        });\n      });\n\n      return result;\n    },\n\n    send(message: TOutgoing) {\n      return send(message);\n    },\n\n    async sendError(error: Error): Promise<never> {\n      try {\n        await send({\n          type: \"error\",\n          ...structuredError(error),\n        });\n      } catch (err) {\n        // ignore and exit anyway\n        process.exit(1);\n      }\n      process.exit(0);\n    },\n  };\n}\n\nconst PORT = process.argv[2];\n\nexport const IPC = createIpc<unknown, unknown>(parseInt(PORT, 10));\n\nprocess.on(\"uncaughtException\", (err) => {\n  IPC.sendError(err);\n});\n\nconst improveConsole = (name: string, stream: string, addStack: boolean) => {\n  // @ts-ignore\n  const original = console[name];\n  // @ts-ignore\n  const stdio = process[stream];\n  // @ts-ignore\n  console[name] = (...args: any[]) => {\n    stdio.write(`TURBOPACK_OUTPUT_B\\n`);\n    original(...args);\n    if (addStack) {\n      const stack = new Error().stack?.replace(/^.+\\n.+\\n/, \"\") + \"\\n\";\n      stdio.write(\"TURBOPACK_OUTPUT_S\\n\");\n      stdio.write(stack);\n    }\n    stdio.write(\"TURBOPACK_OUTPUT_E\\n\");\n  };\n};\n\nimproveConsole(\"error\", \"stderr\", true);\nimproveConsole(\"warn\", \"stderr\", true);\nimproveConsole(\"count\", \"stdout\", true);\nimproveConsole(\"trace\", \"stderr\", false);\nimproveConsole(\"log\", \"stdout\", true);\nimproveConsole(\"group\", \"stdout\", true);\nimproveConsole(\"groupCollapsed\", \"stdout\", true);\nimproveConsole(\"table\", \"stdout\", true);\nimproveConsole(\"debug\", \"stdout\", true);\nimproveConsole(\"info\", \"stdout\", true);\nimproveConsole(\"dir\", \"stdout\", true);\nimproveConsole(\"dirxml\", \"stdout\", true);\nimproveConsole(\"timeEnd\", \"stdout\", true);\nimproveConsole(\"timeLog\", \"stdout\", true);\nimproveConsole(\"timeStamp\", \"stdout\", true);\nimproveConsole(\"assert\", \"stderr\", true);\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["/turbopack/[turbopack-node]/ipc/evaluate.ts"],"sourcesContent":["import { IPC, StructuredError } from \"./index\";\nimport type { Ipc as GenericIpc } from \"./index\";\n\ntype IpcIncomingMessage = {\n  type: \"evaluate\";\n  args: string[];\n};\n\ntype IpcOutgoingMessage =\n  | {\n      type: \"value\";\n      data: string;\n    }\n  | {\n      type: \"end\";\n      data: string | undefined;\n    }\n  | {\n      type: \"fileDependency\";\n      path: string;\n    }\n  | {\n      type: \"buildDependency\";\n      path: string;\n    }\n  | {\n      type: \"dirDependency\";\n      path: string;\n      glob: string;\n    }\n  | {\n      type: \"emittedError\";\n      severity: \"warning\" | \"error\";\n      error: StructuredError;\n    };\n\nexport type Ipc = GenericIpc<IpcIncomingMessage, IpcOutgoingMessage>;\nconst ipc = IPC as Ipc;\n\nexport const run = async (\n  getValue: (ipc: Ipc, ...deserializedArgs: any[]) => any\n) => {\n  while (true) {\n    const msg = await ipc.recv();\n\n    switch (msg.type) {\n      case \"evaluate\": {\n        try {\n          const value = await getValue(ipc, ...msg.args);\n          await ipc.send({\n            type: \"end\",\n            data: value === undefined ? undefined : JSON.stringify(value),\n          });\n        } catch (e) {\n          await ipc.sendError(e as Error);\n        }\n        break;\n      }\n      default: {\n        console.error(\"unexpected message type\", msg.type);\n        process.exit(1);\n      }\n    }\n  }\n};\n\nexport type { IpcIncomingMessage, IpcOutgoingMessage };\n"],"names":[],"mappings":";;;;;;AAqCA,MAAM;AAEC,MAAM,MAAM,OACjB,WACG;IACH,MAAO,IAAI,CAAE;QACX,MAAM,MAAM,MAAM,IAAI,IAAI;QAE1B,OAAQ,IAAI,IAAI;YACd,KAAK;gBAAY;oBACf,IAAI;wBACF,MAAM,QAAQ,MAAM,SAAS,QAAQ,IAAI,IAAI;wBAC7C,MAAM,IAAI,IAAI,CAAC;4BACb,MAAM;4BACN,MAAM,UAAU,YAAY,YAAY,KAAK,SAAS,CAAC,MAAM;wBAC/D;oBACF,EAAE,OAAO,GAAG;wBACV,MAAM,IAAI,SAAS,CAAC;oBACtB;oBACA,KAAM;gBACR;YACA;gBAAS;oBACP,QAAQ,KAAK,CAAC,2BAA2B,IAAI,IAAI;oBACjD,QAAQ,IAAI,CAAC;gBACf;QACF;IACF;AACF"}},
    {"offset": {"line": 196, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}